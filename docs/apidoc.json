
[
  {
    "kind": "library",
    "name": "logging",
    "children": [
      {
        "ref": {
          "name": "Level",
          "refId": "Level"
        },
        "kind": "property",
        "name": "_rootLevel",
        "id": "_rootLevel"
      },
      {
        "ref": {
          "name": "bool",
          "refId": "bool"
        },
        "kind": "property",
        "name": "hierarchicalLoggingEnabled",
        "id": "hierarchicalLoggingEnabled"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA log entry representation used to propagate information from [Logger] to\nindividual [Handler]s.\n\n",
        "name": "LogRecord",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "LogRecord",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "level",
                "id": "level"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "loggerName",
                "id": "loggerName"
              },
              {
                "ref": {
                  "name": "dynamic",
                  "refId": "dynamic"
                },
                "isOptional": true,
                "kind": "param",
                "name": "time",
                "id": "time"
              },
              {
                "ref": {
                  "name": "Exception",
                  "refId": "Exception"
                },
                "isOptional": true,
                "kind": "param",
                "name": "exception",
                "id": "exception"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "exceptionText",
                "id": "exceptionText"
              }
            ],
            "id": "LogRecord6()"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "kind": "property",
            "name": "level",
            "id": "level"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "message",
            "id": "message"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "loggerName",
            "id": "loggerName"
          },
          {
            "ref": {
              "name": "Date",
              "refId": "Date"
            },
            "kind": "property",
            "name": "time",
            "id": "time"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "kind": "property",
            "name": "sequenceNumber",
            "id": "sequenceNumber"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "isStatic": true,
            "kind": "property",
            "name": "_nextNumber",
            "id": "_nextNumber"
          },
          {
            "ref": {
              "name": "Exception",
              "refId": "Exception"
            },
            "kind": "property",
            "name": "exception",
            "id": "exception"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "exceptionText",
            "id": "exceptionText"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "LogRecord",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "level",
                "id": "level"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "loggerName",
                "id": "loggerName"
              },
              {
                "ref": {
                  "name": "dynamic",
                  "refId": "dynamic"
                },
                "isOptional": true,
                "kind": "param",
                "name": "time",
                "id": "time"
              },
              {
                "ref": {
                  "name": "Exception",
                  "refId": "Exception"
                },
                "isOptional": true,
                "kind": "param",
                "name": "exception",
                "id": "exception"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "exceptionText",
                "id": "exceptionText"
              }
            ],
            "id": "LogRecord6()"
          }
        ],
        "id": "LogRecord"
      },
      {
        "interfaces": [
          {
            "name": "Comparable",
            "refId": "Comparable"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\n[Level]s to control logging output. Logging can be enabled to include all\nlevels above certain [Level]. [Level]s are ordered using an integer\nvalue [Level.value]. The predefined [Level] constants below are sorted as\nfollows (in descending order): [Level.SHOUT], [Level.SEVERE],\n[Level.WARNING], [Level.INFO], [Level.CONFIG], [Level.FINE], [Level.FINER],\n[Level.FINEST], and [Level.ALL].\n\nWe recommend using one of the predefined logging levels. If you define your\nown level, make sure you use a value between those used in [Level.ALL] and\n[Level.OFF].\n\n",
        "name": "Level",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "Level",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "int",
                  "refId": "int"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "Level2()"
          },
          {
            "isOperator": true,
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": "==",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": "==1()"
          },
          {
            "isOperator": true,
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": "<",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": "<1()"
          },
          {
            "isOperator": true,
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": "<=",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": "<=1()"
          },
          {
            "isOperator": true,
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": ">",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": ">1()"
          },
          {
            "isOperator": true,
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": ">=",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": ">=1()"
          },
          {
            "returnType": {
              "name": "int",
              "refId": "int"
            },
            "kind": "method",
            "name": "compareTo",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "other",
                "id": "other"
              }
            ],
            "id": "compareTo1()"
          },
          {
            "returnType": {
              "name": "int",
              "refId": "int"
            },
            "kind": "method",
            "name": "hashCode",
            "id": "hashCode0()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "name": "toString",
            "id": "toString0()"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "kind": "property",
            "name": "hashCode",
            "id": "hashCode"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "name",
            "id": "name"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "kind": "property",
            "name": "value",
            "id": "value"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "ALL",
            "id": "ALL"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "OFF",
            "id": "OFF"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "FINEST",
            "id": "FINEST"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "FINER",
            "id": "FINER"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "FINE",
            "id": "FINE"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "CONFIG",
            "id": "CONFIG"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "INFO",
            "id": "INFO"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "WARNING",
            "id": "WARNING"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "SEVERE",
            "id": "SEVERE"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "isStatic": true,
            "kind": "property",
            "name": "SHOUT",
            "id": "SHOUT"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "Level",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "int",
                  "refId": "int"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "Level2()"
          }
        ],
        "id": "Level"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "List of handlers that will be called on a logger event.\n",
        "name": "LoggerHandlerList",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "LoggerHandlerList",
            "children": [
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "_logger",
                "id": "_logger"
              }
            ],
            "id": "LoggerHandlerList1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "name": "add",
            "children": [
              {
                "ref": {
                  "name": "LoggerHandler",
                  "refId": "LoggerHandler"
                },
                "kind": "param",
                "name": "handler",
                "id": "handler"
              }
            ],
            "id": "add1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "name": "remove",
            "children": [
              {
                "ref": {
                  "name": "LoggerHandler",
                  "refId": "LoggerHandler"
                },
                "kind": "param",
                "name": "handler",
                "id": "handler"
              }
            ],
            "id": "remove1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "name": "clear",
            "id": "clear0()"
          },
          {
            "ref": {
              "name": "Logger",
              "refId": "Logger"
            },
            "kind": "property",
            "name": "_logger",
            "id": "_logger"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "LoggerHandlerList",
            "children": [
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "_logger",
                "id": "_logger"
              }
            ],
            "id": "LoggerHandlerList1()"
          }
        ],
        "id": "LoggerHandlerList"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "Event manager for a [Logger] (holds events that a [Logger] can fire).\n",
        "name": "LoggerEvents",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "LoggerEvents",
            "children": [
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "_logger",
                "id": "_logger"
              }
            ],
            "id": "LoggerEvents1()"
          },
          {
            "returnType": {
              "name": "LoggerHandlerList",
              "refId": "LoggerHandlerList"
            },
            "kind": "method",
            "comment": "Event fired when a log record is added to a [Logger].\n",
            "name": "record",
            "id": "record0()"
          },
          {
            "ref": {
              "name": "LoggerHandlerList",
              "refId": "LoggerHandlerList"
            },
            "kind": "property",
            "comment": "Event fired when a log record is added to a [Logger].\n",
            "name": "record",
            "id": "record"
          },
          {
            "ref": {
              "name": "Logger",
              "refId": "Logger"
            },
            "kind": "property",
            "name": "_logger",
            "id": "_logger"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "LoggerEvents",
            "children": [
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "_logger",
                "id": "_logger"
              }
            ],
            "id": "LoggerEvents1()"
          }
        ],
        "id": "LoggerEvents"
      },
      {
        "kind": "typedef",
        "comment": "Handler callback to process log entries as they are added to a [Logger].\n",
        "name": "LoggerHandler",
        "id": "LoggerHandler"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nUse a [Logger] to log debug messages. [Logger]s are named using a\nhierarchical dot-separated name convention.\n\n",
        "name": "Logger",
        "children": [
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "comment": "The full name of this logger, which includes the parent's full name.\n",
            "name": "fullName",
            "id": "fullName0()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nSingleton constructor. Calling `new Logger(name)` will return the same\nactual instance whenever it is called with the same string name.\n\n",
            "name": "Logger",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              }
            ],
            "id": "Logger1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "Logger._internal",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "parent",
                "id": "parent"
              }
            ],
            "id": "Logger._internal2()"
          },
          {
            "returnType": {
              "name": "Level",
              "refId": "Level"
            },
            "kind": "method",
            "comment": "\nEffective level considering the levels established in this logger's parents\n(when [hierarchicalLoggingEnabled] is true).\n\n",
            "name": "level",
            "id": "level0()"
          },
          {
            "isSetter": true,
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "Override the level for this particular [Logger] and its children.\n",
            "name": "level=",
            "children": [
              {
                "ref": {
                  "name": "dynamic",
                  "refId": "dynamic"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "level=1()"
          },
          {
            "returnType": {
              "name": "LoggerEvents",
              "refId": "LoggerEvents"
            },
            "kind": "method",
            "comment": "\nReturns an event manager for this [Logger]. You can listen for log messages\nby adding a [LoggerHandler] to an event from the event manager, for\ninstance:\n   logger.on.record.add((record) { ... });\n\n",
            "name": "on",
            "id": "on0()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Adds a handler to listen whenever a log record is added to this logger.\n",
            "name": "_addHandler",
            "children": [
              {
                "ref": {
                  "name": "LoggerHandler",
                  "refId": "LoggerHandler"
                },
                "kind": "param",
                "name": "handler",
                "id": "handler"
              }
            ],
            "id": "_addHandler1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Remove a previously added handler.\n",
            "name": "_removeHandler",
            "children": [
              {
                "ref": {
                  "name": "LoggerHandler",
                  "refId": "LoggerHandler"
                },
                "kind": "param",
                "name": "handler",
                "id": "handler"
              }
            ],
            "id": "_removeHandler1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Removes all handlers previously added to this logger.\n",
            "name": "_clearHandlers",
            "id": "_clearHandlers0()"
          },
          {
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "comment": "Whether a message for [value]'s level is loggable in this logger.\n",
            "name": "isLoggable",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "isLoggable1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "\nAdds a log record for a [message] at a particular [logLevel] if\n`isLoggable(logLevel)` is true. Use this method to create log entries for\nuser-defined levels. To record a message at a predefined level (e.g.\n[Level.INFO], [Level.WARNING], etc) you can use their specialized methods\ninstead (e.g. [info], [warning], etc).\n\n",
            "name": "log",
            "children": [
              {
                "ref": {
                  "name": "Level",
                  "refId": "Level"
                },
                "kind": "param",
                "name": "logLevel",
                "id": "logLevel"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "log2()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.FINEST].\n",
            "name": "finest",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "finest1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.FINER].\n",
            "name": "finer",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "finer1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.FINE].\n",
            "name": "fine",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "fine1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.CONFIG].\n",
            "name": "config",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "config1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.INFO].\n",
            "name": "info",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "info1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.WARNING].\n",
            "name": "warning",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "warning1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.SEVERE].\n",
            "name": "severe",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "severe1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "comment": "Log message at level [Level.SHOUT].\n",
            "name": "shout",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "message",
                "id": "message"
              }
            ],
            "id": "shout1()"
          },
          {
            "returnType": {
              "name": "void",
              "refId": "void"
            },
            "kind": "method",
            "name": "_publish",
            "children": [
              {
                "ref": {
                  "name": "LogRecord",
                  "refId": "LogRecord"
                },
                "kind": "param",
                "name": "record",
                "id": "record"
              }
            ],
            "id": "_publish1()"
          },
          {
            "isStatic": true,
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "Top-level root [Logger].\n",
            "name": "root",
            "id": "root0()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "comment": "The full name of this logger, which includes the parent's full name.\n",
            "name": "fullName",
            "id": "fullName"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "kind": "property",
            "comment": "\nEffective level considering the levels established in this logger's parents\n(when [hierarchicalLoggingEnabled] is true).\n\n",
            "name": "level",
            "id": "level"
          },
          {
            "ref": {
              "name": "LoggerEvents",
              "refId": "LoggerEvents"
            },
            "kind": "property",
            "comment": "\nReturns an event manager for this [Logger]. You can listen for log messages\nby adding a [LoggerHandler] to an event from the event manager, for\ninstance:\n   logger.on.record.add((record) { ... });\n\n",
            "name": "on",
            "id": "on"
          },
          {
            "ref": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "isStatic": true,
            "kind": "property",
            "comment": "Top-level root [Logger].\n",
            "name": "root",
            "id": "root"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "name",
            "id": "name"
          },
          {
            "ref": {
              "name": "Logger",
              "refId": "Logger"
            },
            "kind": "property",
            "name": "parent",
            "id": "parent"
          },
          {
            "ref": {
              "name": "Level",
              "refId": "Level"
            },
            "kind": "property",
            "name": "_level",
            "id": "_level"
          },
          {
            "ref": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "Logger",
                  "refId": "Logger"
                }
              ]
            },
            "kind": "property",
            "name": "children",
            "id": "children"
          },
          {
            "ref": {
              "name": "List",
              "refId": "List",
              "arguments": [
                {
                  "name": "LoggerHandler",
                  "refId": "LoggerHandler"
                }
              ]
            },
            "kind": "property",
            "name": "_handlers",
            "id": "_handlers"
          },
          {
            "ref": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "Logger",
                  "refId": "Logger"
                }
              ]
            },
            "isStatic": true,
            "kind": "property",
            "name": "_loggers",
            "id": "_loggers"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nSingleton constructor. Calling `new Logger(name)` will return the same\nactual instance whenever it is called with the same string name.\n\n",
            "name": "Logger",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              }
            ],
            "id": "Logger1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "Logger._internal",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "Logger",
                  "refId": "Logger"
                },
                "kind": "param",
                "name": "parent",
                "id": "parent"
              }
            ],
            "id": "Logger._internal2()"
          }
        ],
        "id": "Logger"
      }
    ],
    "id": "package:logging/logging.dart"
  },
  {
    "kind": "library",
    "name": "routing",
    "children": [
      {
        "returnType": {
          "name": "int",
          "refId": "int"
        },
        "kind": "method",
        "comment": "\nParses an integer, returning the integer on success, or [null] on failure.\n\n",
        "name": "intParser",
        "children": [
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "param",
            "name": "value",
            "id": "value"
          }
        ],
        "id": "intParser1()"
      },
      {
        "returnType": {
          "name": "List",
          "refId": "List",
          "arguments": [
            {
              "name": "Tuple",
              "refId": "Tuple"
            }
          ]
        },
        "kind": "method",
        "name": "zip",
        "children": [
          {
            "ref": {
              "name": "List",
              "refId": "List"
            },
            "kind": "param",
            "name": "fsts",
            "id": "fsts"
          },
          {
            "ref": {
              "name": "List",
              "refId": "List"
            },
            "kind": "param",
            "name": "snds",
            "id": "snds"
          }
        ],
        "id": "zip2()"
      },
      {
        "ref": {
          "name": "dynamic",
          "refId": "dynamic"
        },
        "kind": "property",
        "name": "logFine",
        "id": "logFine"
      },
      {
        "interfaces": [
          {
            "name": "Exception",
            "refId": "Exception"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nThe error that is thrown when a route cannot be built.\n\n",
        "name": "RouteBuildError",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteBuildError",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "msg",
                "id": "msg"
              }
            ],
            "id": "RouteBuildError1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "name": "toString",
            "id": "toString0()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "prefix",
            "id": "prefix"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "msg",
            "id": "msg"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteBuildError",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "msg",
                "id": "msg"
              }
            ],
            "id": "RouteBuildError1()"
          }
        ],
        "id": "RouteBuildError"
      },
      {
        "interfaces": [
          {
            "name": "Exception",
            "refId": "Exception"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nThe error that is thrown when a route cannot be parsed.\n\n",
        "name": "RouteParseError",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteParseError",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "msg",
                "id": "msg"
              }
            ],
            "id": "RouteParseError1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "name": "toString",
            "id": "toString0()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "prefix",
            "id": "prefix"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "msg",
            "id": "msg"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteParseError",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "isOptional": true,
                "kind": "param",
                "name": "msg",
                "id": "msg"
              }
            ],
            "id": "RouteParseError1()"
          }
        ],
        "id": "RouteParseError"
      },
      {
        "interfaces": [
          {
            "name": "RouteComponent",
            "refId": "RouteComponent"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "name": "RouteStatic",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteStatic",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "prefix",
                "id": "prefix"
              },
              {
                "ref": {
                  "name": "Path",
                  "refId": "Path"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "RouteStatic2()"
          },
          {
            "returnType": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "dynamic",
                  "refId": "dynamic"
                }
              ]
            },
            "kind": "method",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "prefix",
            "id": "prefix"
          },
          {
            "ref": {
              "name": "Path",
              "refId": "Path"
            },
            "kind": "property",
            "name": "path",
            "id": "path"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteStatic",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "prefix",
                "id": "prefix"
              },
              {
                "ref": {
                  "name": "Path",
                  "refId": "Path"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "RouteStatic2()"
          }
        ],
        "id": "RouteStatic"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA map of routes.\n\n",
        "name": "RouteMap",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new route map.\n\n",
            "name": "RouteMap",
            "id": "RouteMap0()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nAdds a route to this map.\n\n",
            "name": "add",
            "children": [
              {
                "ref": {
                  "name": "Route",
                  "refId": "Route"
                },
                "kind": "param",
                "name": "route",
                "id": "route"
              }
            ],
            "id": "add1()"
          },
          {
            "returnType": {
              "name": "RouteMatch",
              "refId": "RouteMatch"
            },
            "kind": "method",
            "comment": "\nMatches and returns the first matched route, or null if there is no match.\n\n",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          },
          {
            "ref": {
              "name": "List",
              "refId": "List",
              "arguments": [
                {
                  "name": "Route",
                  "refId": "Route"
                }
              ]
            },
            "kind": "property",
            "name": "routeList",
            "id": "routeList"
          },
          {
            "ref": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "Route",
                  "refId": "Route"
                }
              ]
            },
            "kind": "property",
            "name": "routes",
            "id": "routes"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new route map.\n\n",
            "name": "RouteMap",
            "id": "RouteMap0()"
          }
        ],
        "id": "RouteMap"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA matched route.\n\nContains the route and any arguments generated during match.\n\n",
        "name": "RouteMatch",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteMatch",
            "children": [
              {
                "ref": {
                  "name": "Route",
                  "refId": "Route"
                },
                "kind": "param",
                "name": "route",
                "id": "route"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "RouteMatch3()"
          },
          {
            "returnType": {
              "name": "int",
              "refId": "int"
            },
            "kind": "method",
            "name": "error",
            "id": "error0()"
          },
          {
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": "isError",
            "id": "isError0()"
          },
          {
            "returnType": {
              "name": "Path",
              "refId": "Path"
            },
            "kind": "method",
            "name": "filepath",
            "id": "filepath0()"
          },
          {
            "returnType": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "method",
            "name": "isFile",
            "id": "isFile0()"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "kind": "property",
            "name": "error",
            "id": "error"
          },
          {
            "ref": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "property",
            "name": "isError",
            "id": "isError"
          },
          {
            "ref": {
              "name": "Path",
              "refId": "Path"
            },
            "kind": "property",
            "name": "filepath",
            "id": "filepath"
          },
          {
            "ref": {
              "name": "bool",
              "refId": "bool"
            },
            "kind": "property",
            "name": "isFile",
            "id": "isFile"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "name",
            "id": "name"
          },
          {
            "ref": {
              "name": "Route",
              "refId": "Route"
            },
            "kind": "property",
            "name": "route",
            "id": "route"
          },
          {
            "ref": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "dynamic",
                  "refId": "dynamic"
                }
              ]
            },
            "kind": "property",
            "name": "args",
            "id": "args"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "method",
            "id": "method"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "protocol",
            "id": "protocol"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteMatch",
            "children": [
              {
                "ref": {
                  "name": "Route",
                  "refId": "Route"
                },
                "kind": "param",
                "name": "route",
                "id": "route"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "RouteMatch3()"
          }
        ],
        "id": "RouteMatch"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA matchable route.\n\nThis optionally matches a route and a method.\n\n",
        "name": "Route",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new route.\n\n",
            "name": "Route",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "RoutePath",
                  "refId": "RoutePath"
                },
                "isOptional": true,
                "kind": "param",
                "name": "path",
                "id": "path"
              },
              {
                "ref": {
                  "name": "RouteMethod",
                  "refId": "RouteMethod"
                },
                "isOptional": true,
                "kind": "param",
                "name": "method",
                "id": "method"
              },
              {
                "ref": {
                  "name": "RouteStatic",
                  "refId": "RouteStatic"
                },
                "isOptional": true,
                "kind": "param",
                "name": "static",
                "id": "static"
              }
            ],
            "id": "Route4()"
          },
          {
            "returnType": {
              "name": "RouteMatch",
              "refId": "RouteMatch"
            },
            "kind": "method",
            "comment": "\nMatches this route against an HTTP request.\n\nReturns a [RouteMatch] or [null] when the request does not match.\n\n",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "name",
            "id": "name"
          },
          {
            "ref": {
              "name": "RoutePath",
              "refId": "RoutePath"
            },
            "kind": "property",
            "name": "path",
            "id": "path"
          },
          {
            "ref": {
              "name": "RouteMethod",
              "refId": "RouteMethod"
            },
            "kind": "property",
            "name": "method",
            "id": "method"
          },
          {
            "ref": {
              "name": "RouteStatic",
              "refId": "RouteStatic"
            },
            "kind": "property",
            "name": "static",
            "id": "static"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new route.\n\n",
            "name": "Route",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "name",
                "id": "name"
              },
              {
                "ref": {
                  "name": "RoutePath",
                  "refId": "RoutePath"
                },
                "isOptional": true,
                "kind": "param",
                "name": "path",
                "id": "path"
              },
              {
                "ref": {
                  "name": "RouteMethod",
                  "refId": "RouteMethod"
                },
                "isOptional": true,
                "kind": "param",
                "name": "method",
                "id": "method"
              },
              {
                "ref": {
                  "name": "RouteStatic",
                  "refId": "RouteStatic"
                },
                "isOptional": true,
                "kind": "param",
                "name": "static",
                "id": "static"
              }
            ],
            "id": "Route4()"
          }
        ],
        "id": "Route"
      },
      {
        "interfaces": [
          {
            "name": "RouteComponent",
            "refId": "RouteComponent"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nThe path component of a [Route].\n\n",
        "name": "RoutePath",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new path from a list of [segments].\n\n",
            "name": "RoutePath",
            "children": [
              {
                "ref": {
                  "name": "List",
                  "refId": "List",
                  "arguments": [
                    {
                      "name": "RouteSegment",
                      "refId": "RouteSegment"
                    }
                  ]
                },
                "kind": "param",
                "name": "segments",
                "id": "segments"
              }
            ],
            "id": "RoutePath1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new [RoutePath] from a string path.\n\n",
            "name": "RoutePath.fromPath",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "RoutePath.fromPath1()"
          },
          {
            "isStatic": true,
            "returnType": {
              "name": "List",
              "refId": "List",
              "arguments": [
                {
                  "name": "RouteSegment",
                  "refId": "RouteSegment"
                }
              ]
            },
            "kind": "method",
            "comment": "\nParses a path into a list of segments.\n\n",
            "name": "parse",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "parse1()"
          },
          {
            "isStatic": true,
            "returnType": {
              "name": "List",
              "refId": "List",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                }
              ]
            },
            "kind": "method",
            "name": "split",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "split1()"
          },
          {
            "isStatic": true,
            "returnType": {
              "name": "RouteSegment",
              "refId": "RouteSegment"
            },
            "kind": "method",
            "name": "parseSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "parseSegment1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "comment": "\nBuilds a path from given [args].\n\n",
            "name": "build",
            "children": [
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "isOptional": true,
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "build1()"
          },
          {
            "returnType": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "dynamic",
                  "refId": "dynamic"
                }
              ]
            },
            "kind": "method",
            "comment": "\nMatches the [RoutePath] against a given [path].\n\nOn success, this returns arguments for the route. On failure returns\n[null].\n\n",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          },
          {
            "ref": {
              "name": "List",
              "refId": "List",
              "arguments": [
                {
                  "name": "RouteSegment",
                  "refId": "RouteSegment"
                }
              ]
            },
            "kind": "property",
            "name": "segments",
            "id": "segments"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new path from a list of [segments].\n\n",
            "name": "RoutePath",
            "children": [
              {
                "ref": {
                  "name": "List",
                  "refId": "List",
                  "arguments": [
                    {
                      "name": "RouteSegment",
                      "refId": "RouteSegment"
                    }
                  ]
                },
                "kind": "param",
                "name": "segments",
                "id": "segments"
              }
            ],
            "id": "RoutePath1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new [RoutePath] from a string path.\n\n",
            "name": "RoutePath.fromPath",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "path",
                "id": "path"
              }
            ],
            "id": "RoutePath.fromPath1()"
          }
        ],
        "id": "RoutePath"
      },
      {
        "interfaces": [
          {
            "name": "RouteSegment",
            "refId": "RouteSegment"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA variable route path segment.\n\nVariable segments are defined as a variable name, and optional type (default\nis String), for example:\n\n    // A segment containing a variable named `name`.\n    var s = new RouteVariableSegment.fromSegment('<name>');\n\n    // A segment containing an integer variable named `blogid`.\n    var s = new RouteVariableSegment.fromSegment('<int:blogid>');\n\n",
        "name": "RouteVariableSegment",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteVariableSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "type",
                "id": "type"
              }
            ],
            "id": "RouteVariableSegment2()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new variable segment from a string.\n\n",
            "name": "RouteVariableSegment.fromSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "seg",
                "id": "seg"
              }
            ],
            "id": "RouteVariableSegment.fromSegment1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nParses a string component.\n\nFor [RouteVariableSegment]s this returns the parsed value, or [null] if\nthe value does not match.\n\n",
            "name": "parse",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "parse1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "comment": "\nBuilds a path component from this segment.\n\nFor variable segments, this returns a <key, value> map or raises an error\non failure if incorrect/missing arguments are providedd.\n\n",
            "name": "build",
            "children": [
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "build1()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "key",
            "id": "key"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "type",
            "id": "type"
          },
          {
            "ref": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "Function",
                  "refId": "Function"
                }
              ]
            },
            "kind": "property",
            "name": "typeMap",
            "id": "typeMap"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteVariableSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              },
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "type",
                "id": "type"
              }
            ],
            "id": "RouteVariableSegment2()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new variable segment from a string.\n\n",
            "name": "RouteVariableSegment.fromSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "seg",
                "id": "seg"
              }
            ],
            "id": "RouteVariableSegment.fromSegment1()"
          }
        ],
        "id": "RouteVariableSegment"
      },
      {
        "interfaces": [
          {
            "name": "RouteSegment",
            "refId": "RouteSegment"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA constant route path segment.\n\nConstant segments are simply matched as a string, and contain no variables.\n\n",
        "name": "RouteConstantSegment",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new named segment.\n\n",
            "name": "RouteConstantSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              }
            ],
            "id": "RouteConstantSegment1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nCreates a new named segment.\n\n",
            "name": "RouteConstantSegment.fromSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              }
            ],
            "id": "RouteConstantSegment.fromSegment1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nParses a string component.\n\nFor [RouteConstantSegment]s this returns whether the component matches\nthe given component.\n\n",
            "name": "parse",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "parse1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "comment": "\nBuilds a path component from this segment.\n\nFor constant segments, this is the name of the segment.\n\n",
            "name": "build",
            "children": [
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "build1()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "key",
            "id": "key"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new named segment.\n\n",
            "name": "RouteConstantSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              }
            ],
            "id": "RouteConstantSegment1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "comment": "\nCreates a new named segment.\n\n",
            "name": "RouteConstantSegment.fromSegment",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "key",
                "id": "key"
              }
            ],
            "id": "RouteConstantSegment.fromSegment1()"
          }
        ],
        "id": "RouteConstantSegment"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA segment of a [RoutePath].\n\n",
        "name": "RouteSegment",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "comment": "\nParses a path component into a segment.\n\n",
            "name": "parse",
            "children": [
              {
                "ref": {
                  "name": "String",
                  "refId": "String"
                },
                "kind": "param",
                "name": "value",
                "id": "value"
              }
            ],
            "id": "parse1()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "comment": "\nBuilds a path component from a segment.\n\n",
            "name": "build",
            "children": [
              {
                "ref": {
                  "name": "Map",
                  "refId": "Map",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    },
                    {
                      "name": "dynamic",
                      "refId": "dynamic"
                    }
                  ]
                },
                "kind": "param",
                "name": "args",
                "id": "args"
              }
            ],
            "id": "build1()"
          },
          {
            "ref": {
              "name": "String",
              "refId": "String"
            },
            "kind": "property",
            "name": "key",
            "id": "key"
          }
        ],
        "id": "RouteSegment"
      },
      {
        "interfaces": [
          {
            "name": "RouteComponent",
            "refId": "RouteComponent"
          }
        ],
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nThe method component of a [Route].\n\n",
        "name": "RouteMethod",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteMethod",
            "children": [
              {
                "ref": {
                  "name": "List",
                  "refId": "List",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    }
                  ]
                },
                "kind": "param",
                "name": "methods",
                "id": "methods"
              }
            ],
            "id": "RouteMethod1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteMethod.fromAnything",
            "children": [
              {
                "ref": {
                  "name": "dynamic",
                  "refId": "dynamic"
                },
                "kind": "param",
                "name": "arg",
                "id": "arg"
              }
            ],
            "id": "RouteMethod.fromAnything1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteMethod.get",
            "id": "RouteMethod.get0()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "RouteMethod.post",
            "id": "RouteMethod.post0()"
          },
          {
            "returnType": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "String",
                  "refId": "String"
                }
              ]
            },
            "kind": "method",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          },
          {
            "ref": {
              "name": "Set",
              "refId": "Set",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                }
              ]
            },
            "kind": "property",
            "name": "methods",
            "id": "methods"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteMethod",
            "children": [
              {
                "ref": {
                  "name": "List",
                  "refId": "List",
                  "arguments": [
                    {
                      "name": "String",
                      "refId": "String"
                    }
                  ]
                },
                "kind": "param",
                "name": "methods",
                "id": "methods"
              }
            ],
            "id": "RouteMethod1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteMethod.fromAnything",
            "children": [
              {
                "ref": {
                  "name": "dynamic",
                  "refId": "dynamic"
                },
                "kind": "param",
                "name": "arg",
                "id": "arg"
              }
            ],
            "id": "RouteMethod.fromAnything1()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteMethod.get",
            "id": "RouteMethod.get0()"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "RouteMethod.post",
            "id": "RouteMethod.post0()"
          }
        ],
        "id": "RouteMethod"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "comment": "\nA matchable component of a request, such as its path or method.\n\n",
        "name": "RouteComponent",
        "children": [
          {
            "returnType": {
              "name": "Map",
              "refId": "Map",
              "arguments": [
                {
                  "name": "String",
                  "refId": "String"
                },
                {
                  "name": "dynamic",
                  "refId": "dynamic"
                }
              ]
            },
            "kind": "method",
            "name": "match",
            "children": [
              {
                "ref": {
                  "name": "HttpRequest",
                  "refId": "HttpRequest"
                },
                "kind": "param",
                "name": "request",
                "id": "request"
              }
            ],
            "id": "match1()"
          }
        ],
        "id": "RouteComponent"
      },
      {
        "superclass": {
          "name": "Object",
          "refId": "Object"
        },
        "kind": "class",
        "name": "Tuple",
        "children": [
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "method",
            "name": "Tuple",
            "children": [
              {
                "ref": {
                  "name": "A",
                  "refId": "A"
                },
                "kind": "param",
                "name": "fst",
                "id": "fst"
              },
              {
                "ref": {
                  "name": "B",
                  "refId": "B"
                },
                "kind": "param",
                "name": "snd",
                "id": "snd"
              }
            ],
            "id": "Tuple2()"
          },
          {
            "returnType": {
              "name": "int",
              "refId": "int"
            },
            "kind": "method",
            "name": "hashCode",
            "id": "hashCode0()"
          },
          {
            "returnType": {
              "name": "String",
              "refId": "String"
            },
            "kind": "method",
            "name": "toString",
            "id": "toString0()"
          },
          {
            "ref": {
              "name": "int",
              "refId": "int"
            },
            "kind": "property",
            "name": "hashCode",
            "id": "hashCode"
          },
          {
            "ref": {
              "name": "A",
              "refId": "A"
            },
            "kind": "property",
            "name": "fst",
            "id": "fst"
          },
          {
            "ref": {
              "name": "B",
              "refId": "B"
            },
            "kind": "property",
            "name": "snd",
            "id": "snd"
          },
          {
            "returnType": {
              "name": "dynamic",
              "refId": "dynamic"
            },
            "kind": "constructor",
            "name": "Tuple",
            "children": [
              {
                "ref": {
                  "name": "A",
                  "refId": "A"
                },
                "kind": "param",
                "name": "fst",
                "id": "fst"
              },
              {
                "ref": {
                  "name": "B",
                  "refId": "B"
                },
                "kind": "param",
                "name": "snd",
                "id": "snd"
              }
            ],
            "id": "Tuple2()"
          }
        ],
        "id": "Tuple"
      }
    ],
    "id": "file:///home/afshar/wrk/dart-routing/lib/routing.dart"
  }
]